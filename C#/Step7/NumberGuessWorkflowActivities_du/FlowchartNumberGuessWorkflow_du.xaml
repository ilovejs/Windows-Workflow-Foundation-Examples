<?xml version="1.0" encoding="utf-8"?><Activity x:Class="NumberGuessWorkflowActivities.FlowchartNumberGuessWorkflow" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mca="clr-namespace:Microsoft.CSharp.Activities;assembly=System.Activities" xmlns:n="clr-namespace:NumberGuessWorkflowActivities;assembly=NumberGuessWorkflowActivities" xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"><x:Members><x:Property Name="MaxNumber" Type="InArgument(x:Int32)" /><x:Property Name="Turns" Type="OutArgument(x:Int32)" /></x:Members><TextExpression.NamespacesForImplementation><sco:Collection x:TypeArguments="x:String"><x:String>System</x:String><x:String>System.Collections.Generic</x:String><x:String>System.Data</x:String><x:String>System.Linq</x:String><x:String>System.Text</x:String></sco:Collection></TextExpression.NamespacesForImplementation><TextExpression.ReferencesForImplementation><sco:Collection x:TypeArguments="AssemblyReference"><AssemblyReference>Microsoft.CSharp</AssemblyReference><AssemblyReference>System</AssemblyReference><AssemblyReference>System.Activities</AssemblyReference><AssemblyReference>System.Core</AssemblyReference><AssemblyReference>System.Data</AssemblyReference><AssemblyReference>System.Runtime.Serialization</AssemblyReference><AssemblyReference>System.ServiceModel</AssemblyReference><AssemblyReference>System.ServiceModel.Activities</AssemblyReference><AssemblyReference>System.Xaml</AssemblyReference><AssemblyReference>System.Xml</AssemblyReference><AssemblyReference>System.Xml.Linq</AssemblyReference><AssemblyReference>mscorlib</AssemblyReference><AssemblyReference>NumberGuessWorkflowActivities</AssemblyReference></sco:Collection></TextExpression.ReferencesForImplementation><Flowchart sads:DebugSymbol.Symbol="d4YBQzpcV0ZQcm9qZWN0c1xfRGV2MTFcR2V0dGluZ1N0YXJ0ZWRUdXRvcmlhbFxXRjQ1R2V0dGluZ1N0YXJ0ZWRUdXRvcmlhbFxOdW1iZXJHdWVzc1dvcmtmbG93QWN0aXZpdGllc1xGbG93Y2hhcnROdW1iZXJHdWVzc1dvcmtmbG93LnhhbWwRLAOSAQ8CAQE1B0EQAgEnRAtQGgIBG1MPXxgCARBjFWNjAgELaBloaQIBBnUbdXUCAQRsG2x0AgECPQ09dAIBLTgNOFgCAShEJkQyAgEmTBFMgQECASFHEUdbAgEcWxVbWwIBFlYVVl8CARF1K3VEAgEFbCtsQwIBAw=="><Flowchart.Variables><Variable x:TypeArguments="x:Int32" Name="Guess" /><Variable x:TypeArguments="x:Int32" Name="Target" /></Flowchart.Variables><Flowchart.StartNode><x:Reference>__ReferenceID7</x:Reference></Flowchart.StartNode><FlowStep x:Name="__ReferenceID7"><Assign><Assign.To><OutArgument x:TypeArguments="x:Int32"><mca:CSharpReference x:TypeArguments="x:Int32">Target</mca:CSharpReference></OutArgument></Assign.To><Assign.Value><InArgument x:TypeArguments="x:Int32"><mca:CSharpValue x:TypeArguments="x:Int32">new System.Random().Next(1, MaxNumber + 1)</mca:CSharpValue></InArgument></Assign.Value></Assign><FlowStep.Next><FlowStep x:Name="__ReferenceID0"><n:Prompt BookmarkName="EnterGuess"><n:Prompt.Result><OutArgument x:TypeArguments="x:Int32"><mca:CSharpReference x:TypeArguments="x:Int32">Guess</mca:CSharpReference></OutArgument></n:Prompt.Result><n:Prompt.Text><InArgument x:TypeArguments="x:String"><mca:CSharpValue x:TypeArguments="x:String">"Please enter a number between 1 and " + MaxNumber</mca:CSharpValue></InArgument></n:Prompt.Text></n:Prompt><FlowStep.Next><FlowStep x:Name="__ReferenceID1"><Assign><Assign.To><OutArgument x:TypeArguments="x:Int32"><mca:CSharpReference x:TypeArguments="x:Int32">Turns</mca:CSharpReference></OutArgument></Assign.To><Assign.Value><InArgument x:TypeArguments="x:Int32"><mca:CSharpValue x:TypeArguments="x:Int32">Turns + 1</mca:CSharpValue></InArgument></Assign.Value></Assign><FlowStep.Next><FlowDecision x:Name="__ReferenceID2"><FlowDecision.Condition><mca:CSharpValue x:TypeArguments="x:Boolean">Guess == Target</mca:CSharpValue></FlowDecision.Condition><FlowDecision.True><FlowStep x:Name="__ReferenceID6"><WriteLine><InArgument x:TypeArguments="x:String"><mca:CSharpValue x:TypeArguments="x:String">Guess.ToString() + " is correct. You guessed it in " + Turns.ToString() + " turns."</mca:CSharpValue></InArgument></WriteLine></FlowStep></FlowDecision.True><FlowDecision.False><FlowDecision x:Name="__ReferenceID3"><FlowDecision.Condition><mca:CSharpValue x:TypeArguments="x:Boolean">Guess &lt; Target</mca:CSharpValue></FlowDecision.Condition><FlowDecision.True><FlowStep x:Name="__ReferenceID4"><WriteLine><InArgument x:TypeArguments="x:String"><mca:CSharpValue x:TypeArguments="x:String">Guess.ToString() + " is too low."</mca:CSharpValue></InArgument></WriteLine><FlowStep.Next><x:Reference>__ReferenceID0</x:Reference></FlowStep.Next></FlowStep></FlowDecision.True><FlowDecision.False><FlowStep x:Name="__ReferenceID5"><WriteLine><InArgument x:TypeArguments="x:String"><mca:CSharpValue x:TypeArguments="x:String">Guess.ToString() + " is too high."</mca:CSharpValue></InArgument></WriteLine><FlowStep.Next><x:Reference>__ReferenceID0</x:Reference></FlowStep.Next></FlowStep></FlowDecision.False></FlowDecision></FlowDecision.False></FlowDecision></FlowStep.Next></FlowStep></FlowStep.Next></FlowStep></FlowStep.Next></FlowStep><x:Reference>__ReferenceID0</x:Reference><x:Reference>__ReferenceID1</x:Reference><x:Reference>__ReferenceID2</x:Reference><x:Reference>__ReferenceID3</x:Reference><x:Reference>__ReferenceID4</x:Reference><x:Reference>__ReferenceID5</x:Reference><x:Reference>__ReferenceID6</x:Reference></Flowchart></Activity>